module Datapath(
	 input logic clk, reset,
    input logic isALUreg, regWrite, isJAL, isJALR, isBranch, isLUI, isAUIPC, isLoad, isStore, isShamt,
    input logic [11:0] Imm,
	 input logic [3:0] aluControl,
    input logic [31:0] instr, memRdata,
    output logic [31:0] pc, aluOut, memWdata, aluIn1, aluIn2, Simm, Jimm, Bimm, Iimm,A_bus,B_bus,
    output logic [4:0] rs1, rs2, data_to_write,
    output logic [3:0] memWMask,
    output logic isZero, isBLT,isBGT
);

logic [31:0] pcNext, Inst, write_reg,rd1,rd2;

pc pcreg(clk,reset,pcNext,pc);

InstructionMemory Imem(pcNext,Inst);

RegFiles regF(clk,reset, regWrite, write_reg, rs1, rs2, data_to_write, rd1,rd2);

assign A_bus = rd1;
assign B_bus = rd2;

ALUnitHW alu(A_bus,B_bus,Inst[6:0],Inst[14:12],Inst[31:25],Imm,aluOut,isBLT,isBGT,isZero);

endmodule